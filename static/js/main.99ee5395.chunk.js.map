{"version":3,"sources":["components/GetToken.js","components/Sliders.js","components/CreatePlaylist.js","components/GetSongs.js","components/Search.js","components/SongList.js","components/SelectedSongs.js","components/Body.js","App.js","index.js"],"names":["GetToken","apiUrl","react_default","a","createElement","Button_default","variant","color","className","target","href","this","tokenRequestUrl","Component","Sliders","_this","acousticness","props","danceability","energy","instrumentalness","valence","Tooltip_default","title","InputLabel_default","disableAnimation","js_default","minValue","maxValue","step","value","formatLabel","e","onChange","updateSliders","CreatePlaylist","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","getPlaylist","bind","assertThisInitialized","handleChange","state","error","isReturned","spotifyUser","playlistNameInputValue","playlistUrl","getUserId","event","setState","songs","uriArray","map","song","push","uri","self","spotify","getMe","then","response","console","playlistID","addTracksToPlaylist","buildSongUriArray","recommendedList","playlistName","createPlaylist","id","name","public","fillPlaylist","external_urls","style","margin","TextField_default","label","onClick","Save_default","OpenInNew_default","Fragment","GetSongs","updateRecommended","getSeedID","seeds","seedID","seed","i","concat","getRecommendations","seed_tracks","selectedSongs","target_acousticness","target_danceability","target_energy","target_instrumentalness","target_valence","data","log","tracks","createItems","handleClick","axios","headers","Accept","Content-Type","Authorization","localStorage","getItem","url","resp","index","devices","is_active","is_restricted","Error","device","method","params","device_id","uris","catch","err","status","window","open","listItems","ListItem_default","key","alignItems","ListItemAvatar_default","Avatar_default","src","album","images","ListItemText_default","classes","primary","secondary","artists","Fab_default","aria-label","size","PlayArrow_default","components_CreatePlaylist","List_default","render","Search_default","Search","query","getSearchResults","updateSongList","preventDefault","searchTracks","items","onSubmit","Input_default","margin-top","type","SongList","addSelectedSong","val","songList","Add_default","SelectedSongs","removeSelectedSong","addItem","IconButton_default","Delete_default","Body","updateChosenGenres","genreList","chosenGenres","songListNeedsUpdate","newSong","length","includes","newArr","recalcValues","toConsumableArray","indexOf","splice","_this$setState","defineProperty","parseFloat","toFixed","avgAcousticness","avgDanceability","avgEnergy","avgInstrumentalness","avgValence","getAudioFeaturesForTracks","audio_features","Spotify","haveToken","setAccessToken","token","setItem","seedCount","tokenValid","components_Search","components_SongList","components_SelectedSongs","components_Sliders","components_GetSongs","components_GetToken","App","invalidateToken","accessToken","components_Body","ReactDOM","src_App_0","result","location","hash","match","getAccessToken","document","getElementById"],"mappings":"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","file":"static/js/main.99ee5395.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport Button from '@material-ui/core/Button';\n\nclass GetToken extends Component {\n\n    tokenRequestUrl() {\n        const apiUrl = 'https://accounts.spotify.com/authorize';\n        const clientId = '4a12399447fb43f3a7e85bde067b6743';\n        const redirectUri = 'http://andyhoang1994.github.io/music_recommender';\n        const responseType = 'token';   \n        const requestUrl = \n            apiUrl +\n            '?client_id=' + clientId +\n            '&redirect_uri=' + redirectUri +\n            '&response_type=' + responseType\n        ;     \n        return requestUrl;\n    }\n\n    render() {\n        return (\n            <Button  variant=\"contained\" color=\"primary\" className=\"get_token\" target = \"\" href={this.tokenRequestUrl()}>Authorize Spotify App</Button>\n        );\n    }\n}\n\nexport default GetToken","import React, { Component } from 'react';\nimport InputRange from 'react-input-range';\nimport 'react-input-range/lib/css/index.css'\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Tooltip from '@material-ui/core/Tooltip';\n\n\nclass Sliders extends Component {\n    render() { \n        var acousticness = this.props.acousticness;\n        var danceability = this.props.danceability;\n        var energy = this.props.energy;\n        var instrumentalness = this.props.instrumentalness;\n        var valence = this.props.valence\n        return ( \n            <div className=\"sliderContainer\">\n                <Tooltip title=\"Acousticness is a confidence measure of whether a track is acoustic or not\">\n                    <div>\n                        <InputLabel disableAnimation={true} className=\"slider\">Acousticness: {this.props.acousticness}</InputLabel>\n                        <InputRange\n                            minValue={0.0}\n                            maxValue={1.0}\n                            step={0.01}\n                            value={acousticness}\n                            formatLabel={e => \"\"}\n                            onChange={value => this.props.updateSliders(value, 'acousticness')} \n                        />\n                    </div>\n                </Tooltip>\n                <Tooltip title=\"Danceability describes how suitable a track is for dancing based on a combination of musical elements including tempo, rhythm stability, beat strength, and overall regularity.\">\n                    <div>\n                        <InputLabel disableAnimation={true} className=\"slider\">Danceability: {this.props.danceability}</InputLabel>\n                        <InputRange\n                            minValue={0.0}\n                            maxValue={1.0}\n                            step={0.01}\n                            value={danceability}\n                            formatLabel={e => \"\"}\n                            onChange={ value => this.props.updateSliders(value, 'danceability')} \n                        />\n                    </div>\n                </Tooltip>\n                <Tooltip title=\"Energy represents a perceptual measure of intensity and activity. Typically, energetic tracks feel fast, loud, and noisy. Perceptual features contributing to this attribute include dynamic range, perceived loudness, timbre, onset rate, and general entropy.\">\n                    <div>\n                        <InputLabel disableAnimation={true} className=\"slider\">Energy: {this.props.energy}</InputLabel>\n                        <InputRange\n                            minValue={0.0}\n                            maxValue={1.0}\n                            step={0.01}\n                            value={energy}\n                            formatLabel={e => \"\"}\n                            onChange={ value => this.props.updateSliders(value, 'energy')} \n                        />\n                    </div>\n                </Tooltip>\n                <Tooltip title=\"Instrumentalness predicts whether a track contains no vocals. “Ooh” and “aah” sounds are treated as instrumental in this context. Values above 0.5 are intended to represent instrumental tracks, but confidence is higher as the value approaches 1.0.\">\n                    <div>\n                        <InputLabel disableAnimation={true} className=\"slider\">Instrumentalness: {this.props.instrumentalness}</InputLabel>\n                        <InputRange\n                            minValue={0.0}\n                            maxValue={1.0}\n                            step={0.01}\n                            value={instrumentalness}\n                            formatLabel={e => \"\"}\n                            onChange={ value => this.props.updateSliders(value, 'instrumentalness')} \n                        />\n                    </div>\n                </Tooltip>\n                <Tooltip title=\"Valence is a measure describing the musical positiveness conveyed by a track. Tracks with high valence sound more positive (e.g. happy, cheerful, euphoric), while tracks with low valence sound more negative (e.g. sad, depressed, angry).\">\n                    <div>\n                        <InputLabel disableAnimation={true} className=\"slider\">Valence: {this.props.valence}</InputLabel>\n                        <InputRange\n                            minValue={0.0}\n                            maxValue={1.0}\n                            step={0.01}\n                            value={valence}\n                            formatLabel={e => \"\"}\n                            onChange={ value => this.props.updateSliders(value, 'valence')} \n                        />\n                    </div>\n                </Tooltip>\n            </div>\n        );\n    }\n}\n \nexport default Sliders;","import React, { Component } from 'react';\nimport Button from '@material-ui/core/Button'\nimport SaveIcon from '@material-ui/icons/Save';\nimport OpenInNew from '@material-ui/icons/OpenInNew';\nimport TextField from '@material-ui/core/TextField';\n\nclass CreatePlaylist extends Component {\n    constructor(props) {\n        super(props);\n        this.getPlaylist = this.getPlaylist.bind(this);\n        this.handleChange = this.handleChange.bind(this);\n        this.state = {\n            error: null,\n            isReturned: false,\n            spotifyUser: null,\n            playlistNameInputValue: '',\n            playlistUrl: '',\n        };\n    }\n\n    componentDidMount(){\n        this.getUserId();\n    }\n    \n    handleChange(event) {\n        this.setState({playlistNameInputValue: event.target.value});\n    }\n\n    buildSongUriArray(songs) {\n        let uriArray = [];\n        songs.map(song => uriArray.push(song.uri));\n        return (uriArray);\n    }\n\n    getUserId() {\n        let self = this;\n        this.props.spotify.getMe().then(\n            function(response) {\n                self.setState({\n                    spotifyUser: response,\n                })\n            }, function(error) {\n                console.error(error);\n            }\n        )\n    }\n\n    fillPlaylist(playlistID) {\n        this.props.spotify.addTracksToPlaylist(playlistID,this.buildSongUriArray(this.props.recommendedList)).then(\n            function() {\n            }, function(error) {\n                console.error(error);\n            }\n        )\n    }\n\n    getPlaylist() {\n        let self = this;\n        let playlistName = (this.state.playlistNameInputValue !== '' ? this.state.playlistNameInputValue : \"New Playlist\");\n        this.props.spotify.createPlaylist(\n            this.state.spotifyUser.id,\n            {\n                name: playlistName + \" (Created by Recommender)\",\n                public: true\n            }\n        ).then(\n            function(response){\n                self.fillPlaylist(response.id);\n                self.setState({playlistUrl: response.external_urls.spotify})\n            }, function(error) {\n                console.error(error);\n            }\n        );\n    }\n\n    render() {\n        if (this.state.spotifyUser != null) {\n            return(\n                <div className=\"create_playlist\" style={{margin: '20px 0'}}>\n                    <TextField label=\"Playlist Name\"value={this.state.playlistNameInputValue} onChange={this.handleChange}></TextField>\n                    <Button variant=\"contained\" color=\"primary\" onClick={this.getPlaylist}>\n                        Create Playlist\n                        <SaveIcon className=\"rightIcon\" />    \n                    </Button>\n                    <div>\n                        {this.state.playlistUrl !== \"\"\n                            ? <Button \n                                className=\"open_playlist\" \n                                variant=\"contained\" \n                                href={this.state.playlistUrl} \n                                target=\"_blank\"\n                            >\n                                Open Playlist\n                                <OpenInNew className=\"rightIcon\"/>    \n                            </Button>\n                            : <React.Fragment/>\n                        }\n                    </div>\n                </div>\n            );\n        } else {\n            return(\n                <div></div>\n            )\n        }\n    }\n}\n\nexport default CreatePlaylist","import React, { Component } from 'react';\nimport axios from 'axios'\nimport Button from '@material-ui/core/Button';\nimport SearchIcon from '@material-ui/icons/Search';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport Avatar from '@material-ui/core/Avatar';\nimport PlayArrow from '@material-ui/icons/PlayArrow';\nimport Fab from '@material-ui/core/Fab';\nimport CreatePlaylist from './CreatePlaylist.js';\n\nclass GetSongs extends Component {\n    constructor(props) {\n        super(props);\n        this.getRecommendations = this.getRecommendations.bind(this);\n        this.handleClick = this.handleClick.bind(this);\n    }\n\n    updateRecommended = (songs) => {\n        this.props.updateRecommended(songs);\n    }\n    getSeedID = (seeds) => {\n        let seedID = [];\n        seeds.map((seed, i) => {\n            return seedID = seedID.concat(seed.id);\n        })\n        return seedID;\n    }\n\n    getRecommendations = () => {\n        let self = this;\n        let seeds = {\n            seed_tracks: this.getSeedID(this.props.selectedSongs),\n            target_acousticness: this.props.acousticness,\n            target_danceability: this.props.danceability,\n            target_energy: this.props.energy,\n            target_instrumentalness: this.props.instrumentalness,\n            target_valence: this.props.valence,\n        }\n        this.props.spotify.getRecommendations(seeds, function(error, data) {\n            if (error) console.log(error);\n            else{\n                self.updateRecommended(data.tracks);\n                console.log(data.tracks)\n            }\n        })\n        this.createItems();\n    }\n\n    handleClick = (uri, href) => {\n        axios({\n          headers: {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json',\n            'Authorization': `Bearer ${localStorage.getItem('access_token')}`\n          },\n          url: 'https://api.spotify.com/v1/me/player/devices'\n        })\n          // Attempt to find recent active / available device from returned array of registered devices\n          .then(resp => {\n            let index = 0;\n            while(resp.data.devices[index]) {\n              if (resp.data.devices[index].is_active && !resp.data.devices[index].is_restricted) {\n                return resp.data.devices[index].id;\n              }\n              index++;\n            }\n            if (typeof resp.data.devices[0] !== 'undefined') {\n              return resp.data.devices[0].id;\n            }\n            throw Error('Cannot find an available device to play on.');\n          })\n    \n          // Play song on first available device, else open browser player\n          .then((device) => {\n            axios({\n              headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json',\n                'Authorization': `Bearer ${localStorage.getItem('access_token')}`\n              },\n              url: 'https://api.spotify.com/v1/me/player/play',\n              method: 'PUT',\n              params: {\n                device_id: device,\n              },\n              data: {\n                uris: [uri],\n              }\n            })\n              .catch(err => {\n                console.log(err);\n                if (!err.response.status) return;\n                let errorStatus = err.response.status;\n                if (errorStatus === 400) {\n                }\n            })\n        })\n        .catch(err => {\n        console.log(err);\n        window.open(href, '_blank');\n        });\n    };\n\n    createItems = () => {\n        const listItems = this.props.recommendedList.map((song, i) => {\n            return  <ListItem key={i} alignItems=\"flex-start\" className='listItem'>\n                        <ListItemAvatar>\n                            <Avatar src={song.album.images[2].url}/>\n                        </ListItemAvatar>\n                        <ListItemText\n                            classes={{primary:'overflow', secondary:'overflow'}}\n                            primary={song.name}\n                            secondary={song.artists[0].name}\n                        />\n                        <Fab color=\"primary\" aria-label=\"Play_Arrow\" size=\"small\">\n                            <PlayArrow onClick={() => {this.handleClick(song.uri, song.external_urls.spotify)}}/>\n                        </Fab>\n                    </ListItem>;\n        });\n        return (\n            <React.Fragment>\n                <CreatePlaylist\n                spotify={this.props.spotify}\n                recommendedList={this.props.recommendedList}\n                />\n                <List className=\"songList\">\n                    {listItems}\n                </List> \n            </React.Fragment>\n        );\n    }\n\n    render = () => {\n        return(\n            <div>\n                <Button variant=\"outlined\" color=\"primary\" onClick={this.getRecommendations}>\n                    Get Songs\n                    <SearchIcon className=\"rightIcon\"/>\n                </Button>\n                <div>{this.createItems()}</div>\n            </div>\n        )\n    }\n}\n\nexport default GetSongs","import React, { Component } from 'react';\r\nimport Input from '@material-ui/core/Input';\r\nimport Button from '@material-ui/core/Button';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\n\r\nclass Search extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.getSearchResults = this.getSearchResults.bind(this);\r\n\r\n        this.state = {\r\n            query: '',\r\n        }\r\n    }\r\n    updateSongList(songs) {\r\n        this.props.updateSongList(songs);\r\n    }\r\n    getSearchResults(event) {\r\n        event.preventDefault();\r\n        let self = this;\r\n\r\n        this.props.spotify.searchTracks(this.state.query)\r\n            .then(\r\n                function(data){\r\n                    console.log(data);\r\n                    self.updateSongList(data.tracks.items);\r\n                }, function(error){\r\n                    console.error(error);\r\n                }\r\n        )\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            query: e.target.value,\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <form onSubmit={this.getSearchResults}>\r\n                <Input variant=\"contained\" color=\"primary\" onChange={this.handleChange} style={{'margin-top': '20px'}}>\r\n                    Get Search\r\n                    <SearchIcon className=\"rightIcon\" />\r\n                </Input>\r\n                <br/>\r\n                <Button type=\"submit\" variant=\"outlined\" color=\"primary\" style={{margin: '20px'}}>\r\n                    Get Songs\r\n                    <SearchIcon className=\"rightIcon\" />\r\n                </Button>\r\n            </form>\r\n        );\r\n    }\r\n}\r\nexport default Search","import React, { Component } from 'react';\nimport axios from 'axios'\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport Avatar from '@material-ui/core/Avatar';\nimport AddIcon from '@material-ui/icons/Add';\nimport PlayArrow from '@material-ui/icons/PlayArrow';\nimport Fab from '@material-ui/core/Fab';\n\nclass SongList extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {  }\n        this.handleClick = this.handleClick.bind(this);\n    }\n    \n   \n\n    addSelectedSong = (song) => {\n      this.props.addSelectedSong(song);\n    }\n\n    updateSliders = (val, name) => {\n        this.props.updateSliders(val, name);\n    }\n    handleClick = (uri, href) => {\n        axios({\n          headers: {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json',\n            'Authorization': `Bearer ${localStorage.getItem('access_token')}`\n          },\n          url: 'https://api.spotify.com/v1/me/player/devices'\n        })\n          // Attempt to find recent active / available device from returned array of registered devices\n          .then(resp => {\n            let index = 0;\n            while(resp.data.devices[index]) {\n              if (resp.data.devices[index].is_active && !resp.data.devices[index].is_restricted) {\n                return resp.data.devices[index].id;\n              }\n              index++;\n            }\n            if (typeof resp.data.devices[0] !== 'undefined') {\n              return resp.data.devices[0].id\n            }\n            throw Error('Cannot find an available device to play on.')\n          })\n    \n          // Play song on first available device, else open browser player\n          .then((device) => {\n            axios({\n              headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json',\n                'Authorization': `Bearer ${localStorage.getItem('access_token')}`\n              },\n              url: 'https://api.spotify.com/v1/me/player/play',\n              method: 'PUT',\n              params: {\n                device_id: device,\n              },\n              data: {\n                uris: [uri],\n              }\n            })\n              .catch(err => {\n                console.log(err);\n                if (!err.response.status) return;\n                let errorStatus = err.response.status;\n                if (errorStatus === 400) {\n                }\n            })\n        })\n        .catch(err => {\n          console.log(href);\n          window.open(href, '_blank');\n        });\n    };\n    createItems = () => {\n        const listItems = this.props.songList.map((song, i) => {\n            return  <ListItem key={i} alignItems=\"flex-start\" className='listItem'>\n                        <ListItemAvatar>\n                            <Avatar src={song.album.images[2].url}/>\n                        </ListItemAvatar>\n                        <ListItemText\n                            classes={{primary:'overflow', secondary:'overflow'}}\n                            primary={song.name}\n                            secondary={song.artists[0].name}\n                        />\n                        <Fab color=\"primary\" aria-label=\"Play_Arrow\" size=\"small\" style={{margin:'0 10px'}}>\n                            <PlayArrow onClick={() => {this.handleClick(song.uri, song.external_urls.spotify)}}/>\n                        </Fab>\n                        <Fab color=\"primary\" aria-label=\"Add\" size=\"small\">\n                            <AddIcon  onClick={() => {this.addSelectedSong(song)}}/>\n                        </Fab>\n                    </ListItem>;\n        });\n        return ( \n            <List className=\"songList\">\n                {listItems}\n            </List>\n        );\n    }\n\n    render = () => { \n        return(\n          <React.Fragment>{this.createItems()}</React.Fragment>\n        );\n    }\n}\n \nexport default SongList;","import React, { Component } from 'react';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport IconButton from '@material-ui/core/IconButton';\r\n\r\nclass SelectedSongs extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            acousticness: [],\r\n            danceability: [],\r\n            energy: [],\r\n            instrumentalness: [],\r\n            valence: [],\r\n        }\r\n    }\r\n\r\n    removeSelectedSong = (song) => {\r\n        this.props.removeSelectedSong(song);\r\n    }\r\n    \r\n    addItem = () => {\r\n        const listItems = this.props.selectedSongs.map((song, i) => {\r\n            return <ListItem key={i} alignItems=\"flex-start\" className='listItem'>\r\n                    <ListItemAvatar>\r\n                        <Avatar src={song.album.images[2].url}/>\r\n                    </ListItemAvatar>\r\n                    <ListItemText\r\n                        primary={song.name}\r\n                        secondary={song.album.name}\r\n                    />\r\n                    <IconButton aria-label=\"Delete\">\r\n                        <DeleteIcon onClick={() => {this.removeSelectedSong(song)}}/>\r\n                    </IconButton>\r\n                </ListItem>\r\n        });\r\n        return ( \r\n            <List className=\"songList\">\r\n                {listItems}\r\n            </List> \r\n        );\r\n    }\r\n\r\n    render = () => { \r\n        return(\r\n          <React.Fragment>{this.addItem()}</React.Fragment>\r\n        );\r\n    }\r\n}\r\n \r\nexport default SelectedSongs;","import React, { Component } from 'react';\nimport Spotify from 'spotify-web-api-js';\nimport GetToken from './GetToken.js';\nimport Sliders from './Sliders.js';\nimport GetSongs from './GetSongs.js';\nimport Search from './Search.js';\nimport SongList from './SongList.js';\nimport SelectedSongs from './SelectedSongs.js'\n\nclass Body extends Component {\n    constructor(props) {\n        super(props);\n        this.spotify = new Spotify();\n        if (this.props.haveToken) {\n            this.spotify.setAccessToken(this.props.token);\n        }\n        localStorage.setItem('access_token', this.props.token);\n        this.state = {\n            chosenGenres: [],\n            acousticness: 0.5.toFixed(2),\n            danceability: 0.5.toFixed(2),\n            energy: 0.5.toFixed(2),\n            instrumentalness:0.5.toFixed(2),\n            valence: 0.5.toFixed(2),\n            songList: [],\n            recommendedList: [],\n            selectedSongs: [],\n            songListNeedsUpdate: true,\n        };\n    }\n\n    updateChosenGenres = (genreList) => {\n        this.setState({\n            chosenGenres: genreList,\n            songListNeedsUpdate: true});\n    }\n    updateSongList = (songList) => {\n        this.setState({songList: songList});\n        console.log('songList:',songList);\n    }\n    updateRecommended = (songs) => {\n        this.setState({recommendedList: songs})\n    }\n    addSelectedSong = (newSong) => {\n        if(this.state.selectedSongs.length < 5){\n            if(this.state.selectedSongs.includes(newSong) === false){\n                let newArr = this.state.selectedSongs.concat(newSong);\n                this.setState({selectedSongs: newArr},() => {\n                    this.recalcValues();\n                })\n            }\n        }\n    }\n    \n    removeSelectedSong = (song) => {\n        var newArr = [...this.state.selectedSongs];\n        var index = newArr.indexOf(song);\n        if (index !== -1) {\n            newArr.splice(index, 1);\n            this.setState({selectedSongs: newArr}, () => {\n                this.recalcValues();\n            })\n        }\n    }\n    updateSliders = (val, name) => {\n        if(val === 'NaN') val = 0;\n        this.setState({\n            [name]: parseFloat(val).toFixed(2),\n            songListNeedsUpdate: true\n        })\n    }\n    recalcValues = () => {\n        let self = this;\n        \n        let seedID = [];\n        let avgAcousticness = 0;\n        let avgDanceability = 0;\n        let avgEnergy = 0;\n        let avgInstrumentalness = 0;\n        let avgValence = 0;\n        \n        this.state.selectedSongs.map((selectedSongs, i) => {\n            return seedID = seedID.concat(selectedSongs.id);\n        })\n\n        this.spotify.getAudioFeaturesForTracks(seedID, function(error, data) {\n            var i = seedID.length;\n\n            if (error) console.log(error);\n            else{\n                if(seedID.length > 0){\n\n                    data.audio_features.map((song) => {\n                        if(song != null){\n                            avgAcousticness += song.acousticness;\n                            avgDanceability += song.danceability;\n                            avgEnergy += song.energy;\n                            avgInstrumentalness += song.instrumentalness;\n                            avgValence += song.valence;\n                        }\n                        else i--;\n                    })\n                }\n                avgAcousticness = (avgAcousticness/i).toFixed(2);\n                self.updateSliders(avgAcousticness, 'acousticness');\n                avgDanceability = (avgDanceability/i).toFixed(2);\n                self.updateSliders(avgDanceability, 'danceability');\n                avgEnergy = (avgEnergy/i).toFixed(2);\n                self.updateSliders(avgEnergy, 'energy');\n                avgInstrumentalness = (avgInstrumentalness/i).toFixed(2);\n                self.updateSliders(avgInstrumentalness, 'instrumentalness');\n                avgValence = (avgValence/i).toFixed(2);\n                self.updateSliders(avgValence, 'valence');\n            }\n        })\n    }\n    \n    \n\n    render() { \n        this.seedCount = this.state.chosenGenres.length;\n        if (!this.props.haveToken || !this.props.tokenValid) {\n            return (  \n                <div className=\"bodyContainer\">\n                    <GetToken />\n                </div>\n            );\n        } else {\n            return (\n                <div className=\"bodyContainer\">\n                    <div className=\"searchBox\">\n                        <Search\n                        spotify={this.spotify}\n                        getSearchResults={this.getSearchResults}\n                        updateSongList={this.updateSongList}\n                        />\n                        <SongList\n                        spotify={this.spotify}\n                        songList={this.state.songList}\n                        addSelectedSong={this.addSelectedSong}\n                        selectedSongs={this.state.selectedSongs}\n                        acousticness={this.state.acousticness} \n                        danceability={this.state.danceability}\n                        energy={this.state.energy} \n                        instrumentalness={this.state.instrumentalness}\n                        valence={this.state.valence}\n                        updateSliders={this.updateSliders}\n                        />\n                    </div>\n                    <div className=\"recommendBox\">\n                        <div className=\"selectedBox\">\n                            <SelectedSongs\n                            spotify={this.spotify}\n                            selectedSongs={this.state.selectedSongs}\n                            removeSelectedSong={this.removeSelectedSong}\n                            acousticness={this.state.acousticness} \n                            danceability={this.state.danceability}\n                            energy={this.state.energy} \n                            instrumentalness={this.state.instrumentalness}\n                            valence={this.state.valence}\n                            />\n                        </div>\n                        <Sliders\n                        acousticness={this.state.acousticness} \n                        danceability={this.state.danceability}\n                        energy={this.state.energy} \n                        instrumentalness={this.state.instrumentalness}\n                        valence={this.state.valence} \n                        updateSliders={this.updateSliders}\n                        />\n                        <GetSongs\n                        spotify={this.spotify}\n                        selectedSongs={this.state.selectedSongs}\n                        removeSelectedSong={this.removeSelectedSong}\n                        acousticness={this.state.acousticness} \n                        danceability={this.state.danceability}\n                        energy={this.state.energy}\n                        instrumentalness={this.state.instrumentalness}\n                        valence={this.state.valence}\n                        updateRecommended={this.updateRecommended}\n                        recommendedList={this.state.recommendedList}\n                        />\n                    </div>\n                </div>\n            )\n        }\n    }\n}\n \nexport default Body;","import React, { Component  } from 'react';\nimport Body from './components/Body.js';\nimport './App.css';\n\nclass App extends Component {\n  \tconstructor(props) {\n\t\t\tsuper(props);\n\t\t\tthis.invalidateToken = this.invalidateToken.bind(this);\n\n\t\tthis.state = { \n\t\t\thaveToken: this.props.accessToken ? true : false,\n\t\t\ttokenValid: true\n\t\t}\n\t}\n  \n  \tinvalidateToken() {\n  \t  \tthis.setState({tokenValid: false})\n\t  }\n\n  \trender() {\n  \t  \treturn(  \n  \t  \t  \t<div className=\"App\">\n  \t  \t  \t  \t<header className=\"App-header\">\n  \t  \t  \t  \t\t<h1>Song Recommender</h1>\n\t\t\t\t\t\t<h4>A web app for finding songs of your preference</h4>\n  \t  \t  \t  \t</header>\n  \t  \t  \t  \t<Body \n  \t  \t  \t  \t\ttoken={this.props.accessToken} \n  \t  \t  \t  \t\thaveToken={this.state.haveToken} \n  \t  \t  \t  \t\ttokenValid={this.state.tokenValid}\n  \t  \t  \t  \t\tinvalidateToken={this.invalidateToken}/>\n  \t  \t  \t</div>\n  \t  \t)\n  \t};\n\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nfunction getAccessToken() {\n    var result = window.location.hash.match(/#(?:access_token)=([\\S\\s]*?)&/);\n    return (result ? result[1] : '');\n};\n\nReactDOM.render(<App accessToken={getAccessToken()}/>, document.getElementById('root'));"],"sourceRoot":""}