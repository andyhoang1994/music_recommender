{"version":3,"sources":["components/GetToken.js","components/Sliders.js","components/PlaySong.js","components/CreatePlaylist.js","components/GetSongs.js","components/Search.js","components/SongList.js","components/SelectedSongs.js","components/Body.js","App.js","index.js"],"names":["GetToken","apiUrl","react_default","a","createElement","Button_default","variant","color","className","target","href","this","tokenRequestUrl","Component","Sliders","_this","acousticness","props","danceability","energy","instrumentalness","valence","Tooltip_default","title","InputLabel_default","disableAnimation","js_default","minValue","maxValue","step","value","formatLabel","e","onChange","updateSliders","PlaySong","uri","axios","headers","Accept","Content-Type","Authorization","concat","localStorage","getItem","url","then","resp","index","data","devices","is_active","is_restricted","id","Error","device","method","params","device_id","uris","catch","err","console","log","response","status","window","open","CreatePlaylist","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","componentDidMount","getUserId","handleChange","setState","playlistNameInputValue","buildSongUriArray","songs","uriArray","map","song","push","self","assertThisInitialized","spotify","getMe","spotifyUser","error","fillPlaylist","playlistID","addTracksToPlaylist","recommendedList","getPlaylist","playlistName","state","createPlaylist","name","public","playlistUrl","external_urls","bind","isReturned","style","margin","TextField_default","label","onClick","Save_default","OpenInNew_default","Fragment","GetSongs","updateRecommended","getSeedID","seeds","seedID","seed","i","getRecommendations","seed_tracks","selectedSongs","target_acousticness","target_danceability","target_energy","target_instrumentalness","target_valence","tracks","createItems","listItems","ListItem_default","key","alignItems","ListItemAvatar_default","Avatar_default","src","album","images","ListItemText_default","classes","primary","secondary","artists","Fab_default","aria-label","size","PlayArrow_default","components_CreatePlaylist","List_default","render","Search_default","Search","query","onSubmit","getSearchResults","Input_default","placeholder","margin-top","type","updateSongList","event","preventDefault","searchTracks","items","SongList","addSelectedSong","val","songList","Add_default","SelectedSongs","removeSelectedSong","addItem","IconButton_default","Delete_default","Body","newSong","length","includes","newArr","recalcValues","toConsumableArray","indexOf","splice","_this$setState","defineProperty","parseFloat","toFixed","avgAcousticness","avgDanceability","avgEnergy","avgInstrumentalness","avgValence","getAudioFeaturesForTracks","audio_features","Spotify","haveToken","setAccessToken","token","setItem","chosenGenres","songListNeedsUpdate","seedCount","tokenValid","components_Search","components_SongList","components_SelectedSongs","components_Sliders","components_GetSongs","components_GetToken","App","invalidateToken","accessToken","components_Body","ReactDOM","src_App_0","result","location","hash","match","getAccessToken","document","getElementById"],"mappings":"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","file":"static/js/main.fd76009a.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nclass GetToken extends Component{\r\n\r\n    tokenRequestUrl(){\r\n        const apiUrl = 'https://accounts.spotify.com/authorize';\r\n        const clientId = '4a12399447fb43f3a7e85bde067b6743'; //Enter you Spotify app client ID\r\n        const redirectUri = 'https://andyhoang1994.github.io/music_recommender'; //Enter your redirect uri that you've inputted into your Spotify app;\r\n        const responseType = 'token';   \r\n        const requestUrl = \r\n            apiUrl +\r\n            '?client_id=' + clientId +\r\n            '&redirect_uri=' + redirectUri +\r\n            '&response_type=' + responseType\r\n        ;     \r\n        return requestUrl;\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <Button  variant=\"contained\" color=\"primary\" className=\"get_token\" target = \"\" href={this.tokenRequestUrl()}>Authorize Spotify</Button>\r\n        );\r\n    }\r\n}\r\n\r\nexport default GetToken","import React, { Component } from 'react';\r\nimport InputRange from 'react-input-range';\r\nimport 'react-input-range/lib/css/index.css'\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\n\r\n\r\nclass Sliders extends Component {\r\n    render() { \r\n        var acousticness = this.props.acousticness;\r\n        var danceability = this.props.danceability;\r\n        var energy = this.props.energy;\r\n        var instrumentalness = this.props.instrumentalness;\r\n        var valence = this.props.valence\r\n        return ( \r\n            <div className=\"sliderContainer\">\r\n                <Tooltip title=\"Acousticness is a confidence measure of whether a track is acoustic or not\">\r\n                    <div>\r\n                        <InputLabel disableAnimation={true} className=\"slider\">Acousticness: {this.props.acousticness}</InputLabel>\r\n                        <InputRange\r\n                            minValue={0.0}\r\n                            maxValue={1.0}\r\n                            step={0.01}\r\n                            value={acousticness}\r\n                            formatLabel={e => \"\"}\r\n                            onChange={value => this.props.updateSliders(value, 'acousticness')} \r\n                        />\r\n                    </div>\r\n                </Tooltip>\r\n                <Tooltip title=\"Danceability describes how suitable a track is for dancing based on a combination of musical elements including tempo, rhythm stability, beat strength, and overall regularity.\">\r\n                    <div>\r\n                        <InputLabel disableAnimation={true} className=\"slider\">Danceability: {this.props.danceability}</InputLabel>\r\n                        <InputRange\r\n                            minValue={0.0}\r\n                            maxValue={1.0}\r\n                            step={0.01}\r\n                            value={danceability}\r\n                            formatLabel={e => \"\"}\r\n                            onChange={ value => this.props.updateSliders(value, 'danceability')} \r\n                        />\r\n                    </div>\r\n                </Tooltip>\r\n                <Tooltip title=\"Energy represents a perceptual measure of intensity and activity. Typically, energetic tracks feel fast, loud, and noisy. Perceptual features contributing to this attribute include dynamic range, perceived loudness, timbre, onset rate, and general entropy.\">\r\n                    <div>\r\n                        <InputLabel disableAnimation={true} className=\"slider\">Energy: {this.props.energy}</InputLabel>\r\n                        <InputRange\r\n                            minValue={0.0}\r\n                            maxValue={1.0}\r\n                            step={0.01}\r\n                            value={energy}\r\n                            formatLabel={e => \"\"}\r\n                            onChange={ value => this.props.updateSliders(value, 'energy')} \r\n                        />\r\n                    </div>\r\n                </Tooltip>\r\n                <Tooltip title=\"Instrumentalness predicts whether a track contains no vocals. “Ooh” and “aah” sounds are treated as instrumental in this context. Values above 0.5 are intended to represent instrumental tracks, but confidence is higher as the value approaches 1.0.\">\r\n                    <div>\r\n                        <InputLabel disableAnimation={true} className=\"slider\">Instrumentalness: {this.props.instrumentalness}</InputLabel>\r\n                        <InputRange\r\n                            minValue={0.0}\r\n                            maxValue={1.0}\r\n                            step={0.01}\r\n                            value={instrumentalness}\r\n                            formatLabel={e => \"\"}\r\n                            onChange={ value => this.props.updateSliders(value, 'instrumentalness')} \r\n                        />\r\n                    </div>\r\n                </Tooltip>\r\n                <Tooltip title=\"Valence is a measure describing the musical positiveness conveyed by a track. Tracks with high valence sound more positive (e.g. happy, cheerful, euphoric), while tracks with low valence sound more negative (e.g. sad, depressed, angry).\">\r\n                    <div>\r\n                        <InputLabel disableAnimation={true} className=\"slider\">Valence: {this.props.valence}</InputLabel>\r\n                        <InputRange\r\n                            minValue={0.0}\r\n                            maxValue={1.0}\r\n                            step={0.01}\r\n                            value={valence}\r\n                            formatLabel={e => \"\"}\r\n                            onChange={ value => this.props.updateSliders(value, 'valence')} \r\n                        />\r\n                    </div>\r\n                </Tooltip>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n \r\nexport default Sliders;","import axios from 'axios';\r\n\r\nconst PlaySong = (uri, href) => {\r\n    axios({\r\n        headers: {\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json',\r\n        'Authorization': `Bearer ${localStorage.getItem('access_token')}`\r\n        },\r\n        url: 'https://api.spotify.com/v1/me/player/devices'\r\n    })\r\n        .then(resp => {\r\n        let index = 0;\r\n        while(resp.data.devices[index]) {\r\n            if (resp.data.devices[index].is_active && !resp.data.devices[index].is_restricted) {\r\n            return resp.data.devices[index].id;\r\n            }\r\n            index++;\r\n        }\r\n        if (typeof resp.data.devices[0] !== 'undefined') {\r\n            return resp.data.devices[0].id\r\n        }\r\n        throw Error('Cannot find an available device to play on.')\r\n        })\r\n\r\n        .then((device) => {\r\n        axios({\r\n            headers: {\r\n            'Accept': 'application/json',\r\n            'Content-Type': 'application/json',\r\n            'Authorization': `Bearer ${localStorage.getItem('access_token')}`\r\n            },\r\n            url: 'https://api.spotify.com/v1/me/player/play',\r\n            method: 'PUT',\r\n            params: {\r\n            device_id: device,\r\n            },\r\n            data: {\r\n            uris: [uri],\r\n            }\r\n        })\r\n            .catch(err => {\r\n            console.log(err);\r\n            if (!err.response.status) return;\r\n            let errorStatus = err.response.status;\r\n            if (errorStatus === 400) {\r\n            }\r\n        })\r\n    })\r\n    .catch(err => {\r\n        console.log(href);\r\n        window.open(href, '_blank');\r\n    });\r\n};\r\n\r\nexport default PlaySong;","import React, { Component } from 'react';\r\nimport Button from '@material-ui/core/Button'\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport OpenInNew from '@material-ui/icons/OpenInNew';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nclass CreatePlaylist extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.getPlaylist = this.getPlaylist.bind(this);\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.state = {\r\n            error: null,\r\n            isReturned: false,\r\n            spotifyUser: null,\r\n            playlistNameInputValue: '',\r\n            playlistUrl: '',\r\n        };\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        this.getUserId();\r\n    }\r\n    \r\n    handleChange = (e) => {\r\n        this.setState(\r\n            {playlistNameInputValue: e.target.value}\r\n        );\r\n    }\r\n\r\n    buildSongUriArray = (songs) => {\r\n        let uriArray = [];\r\n        songs.map(song => uriArray.push(song.uri));\r\n        return (uriArray);\r\n    }\r\n\r\n    getUserId = () => {\r\n        let self = this;\r\n        this.props.spotify.getMe().then(\r\n            function(response){\r\n                self.setState({\r\n                    spotifyUser: response,\r\n                })\r\n            }, function(error) {\r\n                console.error(error);\r\n            }\r\n        )\r\n    }\r\n\r\n    fillPlaylist = (playlistID) => {\r\n        this.props.spotify.addTracksToPlaylist(playlistID,this.buildSongUriArray(this.props.recommendedList)).then(\r\n            function(){\r\n            }, function(error){\r\n                console.error(error);\r\n            }\r\n        )\r\n    }\r\n\r\n    getPlaylist = () => {\r\n        let self = this;\r\n        let playlistName = (this.state.playlistNameInputValue !== '' ? this.state.playlistNameInputValue : \"New Playlist\");\r\n        this.props.spotify.createPlaylist(\r\n            this.state.spotifyUser.id,\r\n            {\r\n                name: playlistName + \" (Created by Recommender)\",\r\n                public: true\r\n            }\r\n        ).then(\r\n            function(response){\r\n                self.fillPlaylist(response.id);\r\n                self.setState({playlistUrl: response.external_urls.spotify});\r\n            }, function(error){\r\n                console.error(error);\r\n            }\r\n        );\r\n    }\r\n\r\n    render(){\r\n        if(this.state.spotifyUser != null){\r\n            return(\r\n                <div className=\"create_playlist\" style={{margin: '20px 0'}}>\r\n                    <TextField label=\"Playlist Name\"value={this.state.playlistNameInputValue} onChange={this.handleChange}></TextField>\r\n                    <Button variant=\"contained\" color=\"primary\" onClick={this.getPlaylist}>\r\n                        Create Playlist\r\n                        <SaveIcon className=\"rightIcon\" />    \r\n                    </Button>\r\n                    <div>\r\n                        {this.state.playlistUrl !== \"\"\r\n                            ? <Button \r\n                                className=\"open_playlist\" \r\n                                variant=\"contained\" \r\n                                href={this.state.playlistUrl} \r\n                                target=\"_blank\"\r\n                            >\r\n                                Open Playlist\r\n                                <OpenInNew className=\"rightIcon\"/>    \r\n                            </Button>\r\n                            : <React.Fragment/>\r\n                        }\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n        else{\r\n            return <React.Fragment/>\r\n        }\r\n    }\r\n}\r\n\r\nexport default CreatePlaylist","import React, { Component } from 'react';\r\nimport PlaySong from './PlaySong.js';\r\nimport Button from '@material-ui/core/Button';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport PlayArrow from '@material-ui/icons/PlayArrow';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport CreatePlaylist from './CreatePlaylist.js';\r\n\r\nclass GetSongs extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.getRecommendations = this.getRecommendations.bind(this);\r\n    }\r\n\r\n    updateRecommended = (songs) => {\r\n        this.props.updateRecommended(songs);\r\n    }\r\n    getSeedID = (seeds) => {\r\n        let seedID = [];\r\n        seeds.map((seed, i) => {\r\n            return seedID = seedID.concat(seed.id);\r\n        })\r\n        return seedID;\r\n    }\r\n\r\n    getRecommendations = () => {\r\n        let self = this;\r\n        let seeds = {\r\n            seed_tracks: this.getSeedID(this.props.selectedSongs),\r\n            target_acousticness: this.props.acousticness,\r\n            target_danceability: this.props.danceability,\r\n            target_energy: this.props.energy,\r\n            target_instrumentalness: this.props.instrumentalness,\r\n            target_valence: this.props.valence,\r\n        }\r\n        this.props.spotify.getRecommendations(seeds, function(error, data) {\r\n            if(error) console.log(error);\r\n            else{\r\n                self.updateRecommended(data.tracks);\r\n                console.log(data.tracks);\r\n            }\r\n        })\r\n        this.createItems();\r\n    }\r\n\r\n    createItems = () => {\r\n        const listItems = this.props.recommendedList.map((song, i) => {\r\n            return  <ListItem key={i} alignItems=\"flex-start\" className='listItem'>\r\n                        <ListItemAvatar>\r\n                            <Avatar src={song.album.images[2].url}/>\r\n                        </ListItemAvatar>\r\n                        <ListItemText\r\n                            classes={{primary:'overflow', secondary:'overflow'}}\r\n                            primary={song.name}\r\n                            secondary={song.artists[0].name}\r\n                        />\r\n                        <Fab color=\"primary\" aria-label=\"Play_Arrow\" size=\"small\">\r\n                            <PlayArrow onClick={() => {PlaySong(song.uri, song.external_urls.spotify)}}/>\r\n                        </Fab>\r\n                    </ListItem>;\r\n        });\r\n        return(\r\n            <React.Fragment>\r\n                <CreatePlaylist\r\n                spotify={this.props.spotify}\r\n                recommendedList={this.props.recommendedList}\r\n                />\r\n                <List className=\"songList\">\r\n                    {listItems}\r\n                </List> \r\n            </React.Fragment>\r\n        );\r\n    }\r\n\r\n    render = () => {\r\n        return(\r\n            <div>\r\n                <Button variant=\"outlined\" color=\"primary\" onClick={this.getRecommendations}>\r\n                    Get Songs\r\n                    <SearchIcon className=\"rightIcon\"/>\r\n                </Button>\r\n                <div>{this.createItems()}</div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default GetSongs","import React, { Component } from 'react';\r\nimport Input from '@material-ui/core/Input';\r\nimport Button from '@material-ui/core/Button';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\n\r\nclass Search extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.getSearchResults = this.getSearchResults.bind(this);\r\n\r\n        this.state = {\r\n            query: '',\r\n        }\r\n    }\r\n    updateSongList(songs){\r\n        this.props.updateSongList(songs);\r\n    }\r\n    getSearchResults(event){\r\n        event.preventDefault();\r\n        let self = this;\r\n\r\n        this.props.spotify.searchTracks(this.state.query)\r\n            .then(\r\n                function(data){\r\n                    console.log(data);\r\n                    self.updateSongList(data.tracks.items);\r\n                }, function(error){\r\n                    console.error(error);\r\n                }\r\n            )\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            query: e.target.value,\r\n        })\r\n    }\r\n\r\n    render = () => {\r\n        return(\r\n            <form onSubmit={this.getSearchResults}>\r\n                <Input variant=\"contained\" color=\"primary\" placeholder=\"Enter an artist or title\" onChange={this.handleChange} style={{'margin-top': '20px'}}>\r\n                </Input>\r\n                <br/>\r\n                <Button type=\"submit\" variant=\"outlined\" color=\"primary\" style={{margin: '20px'}}>\r\n                    Search\r\n                    <SearchIcon className=\"rightIcon\" />\r\n                </Button>\r\n            </form>\r\n        );\r\n    }\r\n}\r\nexport default Search","import React, { Component } from 'react';\r\nimport PlaySong from './PlaySong.js';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport PlayArrow from '@material-ui/icons/PlayArrow';\r\nimport Fab from '@material-ui/core/Fab';\r\n\r\nclass SongList extends Component{\r\n    constructor(props){\r\n        super(props);\r\n    }\r\n\r\n    addSelectedSong = (song) => {\r\n      this.props.addSelectedSong(song);\r\n    }\r\n    updateSliders = (val, name) => {\r\n        this.props.updateSliders(val, name);\r\n    }\r\n    createItems = () => {\r\n        const listItems = this.props.songList.map((song, i) => {\r\n            return  <ListItem key={i} alignItems=\"flex-start\" className='listItem'>\r\n                        <ListItemAvatar>\r\n                            <Avatar src={song.album.images[2].url}/>\r\n                        </ListItemAvatar>\r\n                        <ListItemText\r\n                            classes={{primary:'overflow', secondary:'overflow'}}\r\n                            primary={song.name}\r\n                            secondary={song.artists[0].name}\r\n                        />\r\n                        <Fab color=\"primary\" aria-label=\"Play_Arrow\" size=\"small\" style={{margin:'0 10px'}}>\r\n                            <PlayArrow onClick={() => {PlaySong(song.uri, song.external_urls.spotify)}}/>\r\n                        </Fab>\r\n                        <Fab color=\"primary\" aria-label=\"Add\" size=\"small\">\r\n                            <AddIcon  onClick={() => {this.addSelectedSong(song)}}/>\r\n                        </Fab>\r\n                    </ListItem>;\r\n        });\r\n        return( \r\n            <List className=\"songList\">\r\n                {listItems}\r\n            </List>\r\n        );\r\n    }\r\n\r\n    render = () => { \r\n        return(\r\n          <React.Fragment>{this.createItems()}</React.Fragment>\r\n        );\r\n    }\r\n}\r\n \r\nexport default SongList;","import React, { Component } from 'react';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport IconButton from '@material-ui/core/IconButton';\r\n\r\nclass SelectedSongs extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            acousticness: [],\r\n            danceability: [],\r\n            energy: [],\r\n            instrumentalness: [],\r\n            valence: [],\r\n        }\r\n    }\r\n\r\n    removeSelectedSong = (song) => {\r\n        this.props.removeSelectedSong(song);\r\n    }\r\n    \r\n    addItem = () => {\r\n        const listItems = this.props.selectedSongs.map((song, i) => {\r\n            return <ListItem key={i} alignItems=\"flex-start\" className='listItem'>\r\n                    <ListItemAvatar>\r\n                        <Avatar src={song.album.images[2].url}/>\r\n                    </ListItemAvatar>\r\n                    <ListItemText\r\n                        primary={song.name}\r\n                        secondary={song.album.name}\r\n                    />\r\n                    <IconButton aria-label=\"Delete\">\r\n                        <DeleteIcon onClick={() => {this.removeSelectedSong(song)}}/>\r\n                    </IconButton>\r\n                </ListItem>\r\n        });\r\n        return ( \r\n            <List className=\"songList\">\r\n                {listItems}\r\n            </List> \r\n        );\r\n    }\r\n\r\n    render = () => { \r\n        return(\r\n          <React.Fragment>{this.addItem()}</React.Fragment>\r\n        );\r\n    }\r\n}\r\n \r\nexport default SelectedSongs;","import React, { Component } from 'react';\r\nimport Spotify from 'spotify-web-api-js';\r\nimport GetToken from './GetToken.js';\r\nimport Sliders from './Sliders.js';\r\nimport GetSongs from './GetSongs.js';\r\nimport Search from './Search.js';\r\nimport SongList from './SongList.js';\r\nimport SelectedSongs from './SelectedSongs.js'\r\n\r\nclass Body extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.spotify = new Spotify();\r\n        if(this.props.haveToken){\r\n            this.spotify.setAccessToken(this.props.token);\r\n        }\r\n        localStorage.setItem('access_token', this.props.token);\r\n        this.state = {\r\n            chosenGenres: [],\r\n            acousticness: 0.5.toFixed(2),\r\n            danceability: 0.5.toFixed(2),\r\n            energy: 0.5.toFixed(2),\r\n            instrumentalness:0.5.toFixed(2),\r\n            valence: 0.5.toFixed(2),\r\n            songList: [],\r\n            recommendedList: [],\r\n            selectedSongs: [],\r\n            songListNeedsUpdate: true,\r\n        };\r\n    }\r\n\r\n    updateSongList = (songList) => {\r\n        this.setState({songList: songList});\r\n        console.log('songList:',songList);\r\n    }\r\n    updateRecommended = (songs) => {\r\n        this.setState({recommendedList: songs})\r\n    }\r\n    addSelectedSong = (newSong) => {\r\n        if(this.state.selectedSongs.length < 5){\r\n            if(this.state.selectedSongs.includes(newSong) === false){\r\n                let newArr = this.state.selectedSongs.concat(newSong);\r\n                this.setState({selectedSongs: newArr},() => {\r\n                    this.recalcValues();\r\n                })\r\n            }\r\n        }\r\n    }\r\n    removeSelectedSong = (song) => {\r\n        var newArr = [...this.state.selectedSongs];\r\n        var index = newArr.indexOf(song);\r\n        if (index !== -1) {\r\n            newArr.splice(index, 1);\r\n            this.setState({selectedSongs: newArr}, () => {\r\n                this.recalcValues();\r\n            })\r\n        }\r\n    }\r\n    updateSliders = (val, name) => {\r\n        if(val === 'NaN') val = 0;\r\n        this.setState({\r\n            [name]: parseFloat(val).toFixed(2),\r\n            songListNeedsUpdate: true\r\n        })\r\n    }\r\n    recalcValues = () => {\r\n        let self = this;\r\n        \r\n        let seedID = [];\r\n        let avgAcousticness = 0;\r\n        let avgDanceability = 0;\r\n        let avgEnergy = 0;\r\n        let avgInstrumentalness = 0;\r\n        let avgValence = 0;\r\n        \r\n        this.state.selectedSongs.map((selectedSongs, i) => {\r\n            return seedID = seedID.concat(selectedSongs.id);\r\n        })\r\n\r\n        this.spotify.getAudioFeaturesForTracks(seedID, function(error, data) {\r\n            var i = seedID.length;\r\n\r\n            if (error) console.log(error);\r\n            else{\r\n                if(seedID.length > 0){\r\n                    data.audio_features.map((song) => {\r\n                        if(song != null){\r\n                            avgAcousticness += song.acousticness;\r\n                            avgDanceability += song.danceability;\r\n                            avgEnergy += song.energy;\r\n                            avgInstrumentalness += song.instrumentalness;\r\n                            avgValence += song.valence;\r\n                        }\r\n                        else i--;\r\n                    })\r\n                }\r\n                avgAcousticness = (avgAcousticness/i).toFixed(2);\r\n                self.updateSliders(avgAcousticness, 'acousticness');\r\n                avgDanceability = (avgDanceability/i).toFixed(2);\r\n                self.updateSliders(avgDanceability, 'danceability');\r\n                avgEnergy = (avgEnergy/i).toFixed(2);\r\n                self.updateSliders(avgEnergy, 'energy');\r\n                avgInstrumentalness = (avgInstrumentalness/i).toFixed(2);\r\n                self.updateSliders(avgInstrumentalness, 'instrumentalness');\r\n                avgValence = (avgValence/i).toFixed(2);\r\n                self.updateSliders(avgValence, 'valence');\r\n            }\r\n        })\r\n    }\r\n    \r\n    render(){ \r\n        this.seedCount = this.state.chosenGenres.length;\r\n        if(!this.props.haveToken || !this.props.tokenValid){\r\n            return(  \r\n                <div className=\"bodyContainer\">\r\n                    <GetToken />\r\n                </div>\r\n            );\r\n        } else{\r\n            return(\r\n                <div className=\"bodyContainer\">\r\n                    <div className=\"searchBox\">\r\n                        <Search\r\n                            spotify={this.spotify}\r\n                            getSearchResults={this.getSearchResults}\r\n                            updateSongList={this.updateSongList}\r\n                        />\r\n                        <SongList\r\n                            spotify={this.spotify}\r\n                            songList={this.state.songList}\r\n                            addSelectedSong={this.addSelectedSong}\r\n                            selectedSongs={this.state.selectedSongs}\r\n                            acousticness={this.state.acousticness} \r\n                            danceability={this.state.danceability}\r\n                            energy={this.state.energy} \r\n                            instrumentalness={this.state.instrumentalness}\r\n                            valence={this.state.valence}\r\n                            updateSliders={this.updateSliders}\r\n                        />\r\n                    </div>\r\n                    <div className=\"recommendBox\">\r\n                        <div className=\"selectedBox\">\r\n                            <SelectedSongs\r\n                                spotify={this.spotify}\r\n                                selectedSongs={this.state.selectedSongs}\r\n                                removeSelectedSong={this.removeSelectedSong}\r\n                                acousticness={this.state.acousticness} \r\n                                danceability={this.state.danceability}\r\n                                energy={this.state.energy} \r\n                                instrumentalness={this.state.instrumentalness}\r\n                                valence={this.state.valence}\r\n                            />\r\n                        </div>\r\n                        <Sliders\r\n                            acousticness={this.state.acousticness} \r\n                            danceability={this.state.danceability}\r\n                            energy={this.state.energy} \r\n                            instrumentalness={this.state.instrumentalness}\r\n                            valence={this.state.valence} \r\n                            updateSliders={this.updateSliders}\r\n                        />\r\n                        <GetSongs\r\n                            spotify={this.spotify}\r\n                            selectedSongs={this.state.selectedSongs}\r\n                            removeSelectedSong={this.removeSelectedSong}\r\n                            acousticness={this.state.acousticness} \r\n                            danceability={this.state.danceability}\r\n                            energy={this.state.energy}\r\n                            instrumentalness={this.state.instrumentalness}\r\n                            valence={this.state.valence}\r\n                            updateRecommended={this.updateRecommended}\r\n                            recommendedList={this.state.recommendedList}\r\n                        />\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n}\r\n \r\nexport default Body;","import React, { Component  } from 'react';\r\nimport Body from './components/Body.js';\r\nimport './App.css';\r\n\r\nclass App extends Component{\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.invalidateToken = this.invalidateToken.bind(this);\r\n\r\n\t\tthis.state = { \r\n\t\t\thaveToken: this.props.accessToken ? true : false,\r\n\t\t\ttokenValid: true\r\n\t\t}\r\n\t}\r\n\r\n\tinvalidateToken(){\r\n\t\tthis.setState({tokenValid: false});\r\n\t}\r\n\r\n\trender(){\r\n\t\treturn(  \r\n\t\t\t<div className=\"App\">\r\n\t\t\t\t<header className=\"App-header\">\r\n\t\t\t\t\t<h1>Music Recommender</h1>\r\n\t\t\t\t\t\t<h4>A web app for finding songs of your preference</h4>\r\n\t\t\t\t</header>\r\n\t\t\t\t<Body \r\n\t\t\t\t\ttoken={this.props.accessToken} \r\n\t\t\t\t\thaveToken={this.state.haveToken} \r\n\t\t\t\t\ttokenValid={this.state.tokenValid}\r\n\t\t\t\t\tinvalidateToken={this.invalidateToken}/>\r\n\t\t\t</div>\r\n\t\t)\r\n\t};\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nfunction getAccessToken(){\r\n    var result = window.location.hash.match(/#(?:access_token)=([\\S\\s]*?)&/);\r\n    return (result ? result[1] : '');\r\n};\r\n\r\nReactDOM.render(<App accessToken={getAccessToken()}/>, document.getElementById('root'));"],"sourceRoot":""}